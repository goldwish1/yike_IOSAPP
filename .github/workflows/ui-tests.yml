name: UI Tests

on:
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ main ]
    paths:
      - 'Yike/**/View*.swift'  # 仅当视图文件更改时触发

jobs:
  ui-test:
    name: 运行UI测试
    runs-on: macos-latest
    
    steps:
    - name: 签出代码
      uses: actions/checkout@v3
    
    - name: 设置Xcode版本
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: 检查工作目录
      run: |
        pwd
        ls -la
        
    - name: 列出可用schemes和测试计划
      run: |
        xcodebuild -list -project Yike.xcodeproj || echo "找不到主项目文件"
        xcodebuild -list -project Yike/Yike.xcodeproj || echo "找不到嵌套项目文件"
        ls -la Yike.xctestplan || echo "找不到测试计划文件"
        ls -la Yike/Yike.xctestplan || echo "找不到嵌套测试计划文件"
    
    - name: 安装依赖
      run: |
        cd Yike
        xcodebuild -resolvePackageDependencies -project Yike.xcodeproj
    
    - name: 检查测试计划
      run: |
        cd Yike
        if [ -f "Yike.xctestplan" ]; then
          echo "测试计划文件存在，尝试修改："
          cat Yike.xctestplan
          # 修改测试计划以启用UI测试
          sed -i '' 's/"enabled" : false/"enabled" : true/g' Yike.xctestplan
        else
          echo "测试计划文件不存在，无法修改"
        fi
    
    - name: 运行UI测试
      run: |
        cd Yike
        # 尝试找到测试计划文件
        TEST_PLAN=""
        if [ -f "Yike.xctestplan" ]; then
          TEST_PLAN="-testPlan Yike"
        fi
        
        xcodebuild test \
          -project Yike.xcodeproj \
          -scheme "Yike" \
          -destination "platform=iOS Simulator,name=iPhone 15,OS=latest" \
          $TEST_PLAN \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          ONLY_ACTIVE_ARCH=YES \
          VALID_ARCHS=x86_64
    
    - name: 恢复测试计划
      if: always()
      run: |
        cd Yike
        # 恢复测试计划到原始状态
        if [ -f "Yike.xctestplan" ]; then
          git checkout -- Yike.xctestplan
        fi