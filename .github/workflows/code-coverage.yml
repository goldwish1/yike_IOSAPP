name: Code Coverage

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # 每周一执行一次

jobs:
  coverage:
    name: 代码覆盖率报告
    runs-on: macos-latest
    
    steps:
    - name: 签出代码
      uses: actions/checkout@v3
    
    - name: 设置Xcode版本
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
    
    - name: 安装依赖
      run: |
        xcodebuild -resolvePackageDependencies
        brew install xcbeautify
        
    - name: 安装xcresultparser
      run: |
        brew tap a7ex/homebrew-formulae
        brew install xcresultparser
    
    - name: 运行测试并生成覆盖率报告
      run: |
        xcodebuild test \
          -scheme "Yike" \
          -destination "platform=iOS Simulator,name=iPhone 15,OS=latest" \
          -testPlan "Yike" \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          ONLY_ACTIVE_ARCH=YES | xcbeautify
          
        # 将xcresult转换为HTML报告
        xcresultparser TestResults.xcresult --output coverage-report
    
    - name: 归档覆盖率报告
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage-report
        retention-days: 14
        
    - name: 生成覆盖率摘要
      run: |
        echo "## 代码覆盖率摘要" > coverage-summary.md
        echo "" >> coverage-summary.md
        echo "\`\`\`" >> coverage-summary.md
        xcresultparser TestResults.xcresult --text-summary >> coverage-summary.md
        echo "\`\`\`" >> coverage-summary.md
        
    - name: 添加PR评论
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('coverage-summary.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          }); 